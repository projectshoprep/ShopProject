<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.project.mapper.MemberMapper">
	<select id="login" parameterType="map" resultType="member">
		select memberId, pw, memberName, address, to_char(birthDate,'MM/DD/YYYY') as birthDate, memberTelNo,
		withdraw, gender  
		from member where memberId = #{id} and pw = #{passwd}
	</select>
	<select id="managerLogin" parameterType="map" resultType="String">
		select managerId
		from manager
		where managerId = #{managerId} and pw = #{pw}
	</select>
	<select id="selectAllMember" resultType="member">
		select  memberId, memberName, address, to_char(birthDate,'YYYY/MM/DD') as birthDate,
		memberTelNo, gender
		from member
	</select>
	<insert id="insertMember" parameterType="member">
		insert into member(memberId,pw)
		values(#{memberId},#{pw})
	</insert>
	<select id="selectLoginMember" parameterType="String" resultType="member">
		select memberId, memberName, address, to_char(birthDate,'YYYY/MM/DD') as birthDate,
		memberTelNo, gender
		from member
		where memberId = #{memberId}
	</select>
	<select id="selectMemberCount" resultType="int">
		select count(*) from member
	</select>
	<select id="selectMemberList" resultType="member" parameterType="int">
		select * 
		from (
		select ceil(rownum / 15) as pageNo,
		memberId, memberName, address, to_char(birthDate,'YYYY/MM/DD') as birthDate
		,memberTelNo, gender, withdraw 
		from member)
		where pageNo = #{pageNo}
	</select>
	<select id="selectSearchMember" parameterType="map" resultType="member">
		select * 
		from (
		select ceil(rownum / 15) as pageNo,
		memberId, memberName, address, to_char(birthDate,'YYYY/MM/DD') as birthDate
		,memberTelNo, gender, withdraw 
		from member
		where
		${type} like '%' || #{search} || '%'
		) 
		where
		pageNo = #{pageNo}
	</select>
	<select id="selectSearchMemberCount" parameterType="map" resultType="int">
		select count(*)
		from member
		where
		${type} like '%' || #{search} || '%'
	</select>
	<select id="selectMemberOrderCount" resultType="int">
		select count(*) from memberorder
	</select>
	<select id="selectMemberOrderList" parameterType="int" resultType="memberOrder">
		select * 
		from (
		select ceil(rownum / 15) as pageNo,
		mo.*
		from memberorder mo)
		where pageNo = #{pageNo}
	</select>
	<select id="selectSearchMemberOrder" parameterType="map" resultType="memberOrder">
		select * 
		from (
		select ceil(rownum / 15) as pageNo,
		mo.*
		from memberorder mo
		where
		${type} like '%' || #{search} || '%'
		)
		where pageNo = #{pageNo}
	</select>
	<select id="selectLoginMemberOrderList" parameterType="map" resultType="map">
		select * 
		from (
		select ceil(rownum / 15) as pageNo,
		mo.*
		from memberorder mo
		where 
		memberId = #{memberId}
		)
		where pageNo = #{pageNo}
	</select>
	<select id="selectSearchMemberOrderCount" resultType="int">
		select count(*)
		from memberorder
		where
		${type} like '%' || #{search} || '%'
	</select>
	<select id="selectMemberListExcel" resultType="member">
		select memberId, memberName, address
		,to_char(birthDate,'YYYY/MM/DD') as birthDate
		,memberTelNo, gender, withdraw 
		from member
	</select>
	<select id="selectSearchMemberExcel" parameterType="map" resultType="member">
		select memberId, memberName, address
		, to_char(birthDate,'YYYY/MM/DD') as birthDate
		,memberTelNo, gender,withdraw 
		from member
		where
		${type} like '%' || #{search} || '%'
	</select>
	<select id="selectMemberOrderListExcel" resultType="memberOrder">
		select *
		from memberorder
	</select>
	<select id="selectSearchMemberOrderExcel" parameterType="map" resultType="memberOrder">
		select *
		from memberorder
		where
		${type} like '%' || #{search} || '%'
	</select>
	<select id="selectCartList" resultType="cart" parameterType="String">
		select photopath,
		p.productname, p.price, p.productno, c.quantity
		from cart c, product p,
		(select 
		distinct(productno),
		first_value(photopath) over(partition by productno) as photopath
		from productphoto
		) ppc
		where c.productno = p.productno
		and c.memberid = #{id}
		and ppc.productno = c.productno
	</select>
	<insert id="insertKakaoLoginInfo" parameterType="map">
		insert into member(memberId,memberName)
		values(#{memberId},#{memberName})
	</insert>
	<select id="selectId" parameterType="String" resultType="String">
		select memberid from member where memberId = #{memberId}
	</select>
	<update id="updateMember" parameterType="member">
		update member set pw = #{pw},  memberName = #{memberName},
		address = #{address},memberTelNo = #{memberTelNo},gender = #{gender} where memberId = #{memberId}
	</update>
	<insert id="insertNaverLoginInfo" parameterType="map">
		insert into member(memberId,memberName)
		values(#{memberId},#{memberName})
	</insert>
	<select id="selectMemberInfo" parameterType="String" resultType="member">
		select * from member where memberid = #{memberId}
	
	</select>
</mapper>











